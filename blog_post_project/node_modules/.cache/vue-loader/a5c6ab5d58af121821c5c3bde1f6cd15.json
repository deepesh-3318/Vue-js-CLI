{"remainingRequest":"C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\src\\views\\PostComments.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\src\\views\\PostComments.vue","mtime":1591822067909},{"path":"C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Vue-js-CLI\\blog_post_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ1Bvc3RDb21tZW50cycsDQogICAgZGF0YSgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIEJyYW5kTG9nbzogIi9pbWcvbG9nby44MmI5YzdhNS5wbmciLA0KICAgICAgICBpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLA0KICAgICAgICBjb21tZW50czogW10NCiAgICAgIH07DQogICAgfSwNCiAgICBjcmVhdGVkKCkgew0KICAgICAgYXhpb3MNCiAgICAgIC5nZXQoYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9jb21tZW50cz9fbGltaXQ9NS1wb3N0c2lkPSR7dGhpcy5pZH1gKSAgLyogVGhpcyBpcyB0aGUgYXBpIGtleSBwYXRoICovDQogICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgIHRoaXMuY29tbWVudHMgPSByZXNwb25zZS5kYXRhOw0KICAgICAgfSkNCiAgICAgIC5jYXRjaChlcnJvcnMgPT4gew0KICAgICAgICB0aGlzLmVycm9ycy5wdXNoKGVycm9ycyk7DQogICAgICB9KTsNCiAgICB9LA0KICB9DQo="},{"version":3,"sources":["PostComments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostComments.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div id=\"Post-comments\">\r\n        <div class=\"card mb-3\" v-for=\"comment in comments\" :key=\"comment.id\">\r\n          <div class=\"row no-gutters\">\r\n            <div class=\"col-md-2 p-3\">\r\n              <img class=\"card-img-top\" :src=\"BrandLogo\" alt=\"\">\r\n            </div>\r\n            <div class=\"col-md-10\">\r\n              <div class=\"card-body\">\r\n                <h4 class=\"card-title\">{{comment.name}} </h4>\r\n                <p class=\"card-text\">{{comment.body}} </p>\r\n                <p>\r\n                  <small class=\"text-muted\">{{comment.email}}</small>\r\n                </p> \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n     \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'PostComments',\r\n    data() {\r\n      return {\r\n        BrandLogo: \"/img/logo.82b9c7a5.png\",\r\n        id: this.$route.params.id,\r\n        comments: []\r\n      };\r\n    },\r\n    created() {\r\n      axios\r\n      .get(`https://jsonplaceholder.typicode.com/comments?_limit=5-postsid=${this.id}`)  /* This is the api key path */\r\n      .then(response => {\r\n        this.comments = response.data;\r\n      })\r\n      .catch(errors => {\r\n        this.errors.push(errors);\r\n      });\r\n    },\r\n  }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style>\r\n\r\n</style>\r\n"]}]}